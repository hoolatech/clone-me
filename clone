# $1 com.example
# $2 hello-world

### prepare name variations

join() {
    # $1 is return variable name
    # $2 is sep
    # $3... are the elements to join
    local retname=$1 sep=$2 ret=$3
    shift 3 || shift $(($#))
    printf -v "$retname" "%s" "$ret${@/#/$sep}"
}

IFS='-' lowerTokens=( $2 )
IFS=' '
upperTokens=( "${lowerTokens[@]^}" )

join "kebabLower" "-" "${lowerTokens[@]}"
join "kebabUpper" "-" "${upperTokens[@]}"
join "lower" "" "${lowerTokens[@]}"
join "camelTail" "" "${upperTokens[@]:1}"
camel=${lowerTokens[0]}$camelTail
join "pascal" "" "${upperTokens[@]}"

echo lowerTokens: "${lowerTokens[@]}"
echo "${#lowerTokens[@]}"
echo upperTokens: "${upperTokens[@]}"
echo "${#upperTokens[@]}"
echo kebabLower: $kebabLower
echo kebabUpper: $kebabUpper
echo lower: $lower
echo camel: $camel
echo pascal: $pascal

### clear existing files

cd /tmp
docker rm -f $2
docker rmi $2
rm -rf $2

### init the clone

cp -R clone-me $2
rm -rf $2/.git
rm $2/clone
rm $2/README.md

### move files to new directories 

packageDirectory=$(echo $1 | sed "s/\./\//g")

cd /tmp/$2/src/main/java
mkdir -p $packageDirectory
cp -R orgpackage/* $packageDirectory
rm -rf orgpackage

cd /tmp/$2/src/test/java
mkdir -p $packageDirectory
cp -R orgpackage/* $packageDirectory
rm -rf orgpackage

### rename files

cd /tmp/$2

echo 'moving'
find . -name "*" | grep clone-me | xargs rename s/clone-me/$kebabLower/
find . -name "*" | grep Clone-Me | xargs rename s/Clone-Me/$kebabUpper/
find . -name "*" | grep cloneme | xargs rename s/cloneme/$lower/
find . -name "*" | grep CloneMe | xargs rename s/CloneMe/$pascal/
find . -name "*" | grep cloneMe | xargs rename s/cloneMe/$camel/
echo 'moved'

### replace packages in code

find . -type f -exec sed -i'' -e "s/orgpackage/$1/g" {} +

#### replace names in code
find . -type f -exec sed -i'' -e "s/clone-me/$kebabLower/g" {} +
find . -type f -exec sed -i'' -e "s/Clone-Me/$kebabUpper/g" {} +
find . -type f -exec sed -i'' -e "s/cloneme/$lower/g" {} +
find . -type f -exec sed -i'' -e "s/CloneMe/$pascal/g" {} +
find . -type f -exec sed -i'' -e "s/cloneMe/$camel/g" {} +

### init git repo

cd $2
git init

### docker build and run

docker build -t $2 .
docker run \
    -d \
    --name $2 \
    -p 8080:8080 \
    -p 8443:8443 \
    -e JAVA_OPTS="-Ddatarouter.server.name=localhost -Ddatarouter.server.type=dev -Ddatarouter.internalConfigDirectory=dev-docker -Ddatarouter.server.privateIp=127.0.0.1 -Ddatarouter.server.publicIp=127.0.0.1" \
    $2
xdg-open http://localhost:8080/$2
#
